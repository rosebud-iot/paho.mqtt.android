apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 30

        setProperty("archivesBaseName", "org.eclipse.paho.android.service")

        testApplicationId "org.eclipse.paho.android.service.test"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation "org.eclipse.paho:org.eclipse.paho.client.mqttv3:${rootProject.ext.clientVersion}"
    implementation "androidx.appcompat:appcompat:${rootProject.ext.androidXVersion}"
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'

    androidTestImplementation 'androidx.test:core:1.3.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.ext:truth:1.4.0'
}

def sweeprProperties = new Properties()
def sweeprPropertiesFile = rootProject.file("sweepr.properties")

if (sweeprPropertiesFile.exists()) {
    sweeprProperties.load(new FileInputStream(sweeprPropertiesFile))
} else {
    sweeprProperties.setProperty('github.username', System.getenv("GPR_USER") ?: "undefined-user")
    sweeprProperties.setProperty('github.token', System.getenv("GPR_API_KEY") ?: "undefined-token")
}

project.ext.sweeprProperties = sweeprProperties

// Ensure that the publish task depends on assembly
tasks.all { task ->
    if (task instanceof AbstractPublishToMaven) {
        task.dependsOn assemble
    }
}

publishing {
    publications {
        release(MavenPublication) {
            groupId rootProject.ext.group
            artifactId 'org.eclipse.paho.android.service'
            version rootProject.ext.serviceVersion

            artifact("$buildDir/outputs/aar/org.eclipse.paho.android.service-release.aar")
            //artifact "$buildDir/outputs/aar/" + rootProject.ext.serviceArchivesBaseName + "-" + rootProject.ext.serviceVersion + ".aar"

            pom {
                name = 'Eclipse Paho Android Service'
                description = 'The Paho project provides scalable open-source implementations of open and standard messaging protocols aimed at new, existing, and emerging applications for Machine to Machine (M2M) and Internet of Things (IoT).'
                url = 'http://www.eclipse.org/paho'

                licenses {
                    license {
                        name = 'Eclipse Public License - Version 1.0'
                        url = 'http://www.eclipse.org/org/documents/epl-v10.php'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com:rosebud-iot/paho.mqtt.android.git'
                    developerConnection = 'scm:git:ssh://git@github.com:rosebud-iot/paho.mqtt.android.git'
                    url = 'https://github.com/rosebud-iot/paho.mqtt.android.git'
                }
            }

            // include dependencies
            pom.withXml {
                def dependencies = asNode().appendNode('dependencies')
                configurations.getByName("releaseCompileClasspath").getResolvedConfiguration().getFirstLevelModuleDependencies().each {
                    def dependency = dependencies.appendNode('dependency')
                    dependency.appendNode('groupId', it.moduleGroup)
                    dependency.appendNode('artifactId', it.moduleName)
                    dependency.appendNode('version', it.moduleVersion)
                }
            }
        }
    }
    repositories {
        maven {
            name = "GitHubPublicPackages"
            url = uri("https://maven.pkg.github.com/sweepr-sdk/android")
            credentials {
                username = sweeprProperties["github.username"]
                password = sweeprProperties["github.token"]
            }
        }
    }
}
